/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keymap_french_osx.h"

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3


&mt {
    tapping-term-ms = <400>;
};


&spi1 {
   compatible = "nordic,nrf-spim";
  /* Cannot be used together with i2c0. */
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "SK6812mini";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <27>; /* There are per-key RGB, but the first 6 are underglow */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};


/ {
        behaviors {
                comma: cmlk_comma {
                        compatible = "zmk,behavior-mod-morph";
                        label = "COLEMAK_COMMA";
                        #binding-cells = <0>;
                        bindings = <&kp FR_COMM>, <&kp FR_LABK>;
                        mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
                };
                dot: cmlk_dot {
                        compatible = "zmk,behavior-mod-morph";
                        label = "COLEMAK_DOT";
                        #binding-cells = <0>;
                        bindings = <&kp FR_DOT>, <&kp FR_RABK>;
                        mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
                };
                slash: cmlk_slash {
                        compatible = "zmk,behavior-mod-morph";
                        label = "COLEMAK_SLASH";
                        #binding-cells = <0>;
                        bindings = <&kp FR_SLSH>, <&kp FR_QUES>;
                        mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
                };
                quote: cmlk_quote {
                        compatible = "zmk,behavior-mod-morph";
                        label = "COLEMAK_QUOTE";
                        #binding-cells = <0>;
                        bindings = <&kp FR_QUOT>, <&kp FR_DQUO>;
                        mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
                };
                semicol: cmlk_semicol {
                        compatible = "zmk,behavior-mod-morph";
                        label = "COLEMAK_SEMICOL";
                        #binding-cells = <0>;
                        bindings = <&kp FR_SCLN>, <&kp FR_COLN>;
                        mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
                };
                blsl: cmlk_blsl {
                        compatible = "zmk,behavior-mod-morph";
                        label = "COLEMAK_BLSL";
                        #binding-cells = <0>;
                        bindings = <&kp FR_BSLS>, <&kp FR_PIPE>;
                        mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "default";
// errors : 
// -----------------------------------------------------------------------------------------
// | RSE/ESC  |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U   |  Y  |  ;  |  \   |
// | SHFT/TAB |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E   |  I  |  O  |  '   |
// | CTRL     |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,   |  .  |  /  |  -   |
//                        | GUI | ALT | SPC |   | ENT | LWR  | BKSP |
                        bindings = <
   &lt RAISE ESC &kp FR_Q    &kp FR_W     &kp FR_F      &kp FR_P      &kp FR_G      &kp FR_J   &kp FR_L     &kp FR_U     &kp FR_Y   &semicol    &blsl
   &mt LSHFT TAB &kp FR_A    &kp FR_R     &kp FR_S      &kp FR_T      &kp FR_D      &kp FR_H   &kp FR_N     &kp FR_E     &kp FR_I   &kp FR_O    &quote
   &kp LCTRL     &kp FR_Z    &kp FR_X     &kp FR_C      &kp FR_V      &kp FR_B      &kp FR_K   &kp FR_M     &comma       &dot       &slash      &kp FR_MINUS
                                          &kp LGUI      &kp LALT      &kp SPACE     &kp RET    &mo LOWER    &kp BSPC
                        >;

                };
                lower_layer {
                        label = "lower";

// error @ # 

// -----------------------------------------------------------------------------------------
// | ADJUST   |  !  |  @  |  {  |  }  |  |  |   |  ¨  |  ´  |  ^  |  `  |     |     |
// | SHFT/TAB |  #  |  $  |  (  |  )  |  `  |   |  +  |  -  |  /  |  *  |  %  |     |
// | CTRL     |  %  |  ^  |  [  |  ]  |  ~  |   |  &  |  =  |     |     |     |     |
//                        | ALT |     |     |   |     |     | DEL |
                        bindings = <
   &mo ADJUST &kp FR_EXLM &kp FR_AT   &kp FR_LBRC  &kp FR_RBRC  &kp FR_PIPE        &kp FR_DIAE &kp FR_ACUT &kp FR_CIRC &kp FR_GRV      &none     &none
   &kp LSHFT  &kp FR_HASH    &kp FR_DLLR    &kp FR_LPAR  &kp FR_RPAR  &kp FR_GRV      &kp FR_PLUS    &kp FR_MINUS   &kp FR_SLSH    &kp FR_ASTR &kp FR_PRCNT  &none
   &kp LCTRL  &kp FR_PRCNT   &kp FR_CIRC &kp FR_LBKT  &kp FR_RBKT  &kp FR_TILD     &kp FR_AMPS    &kp FR_EQUAL   &none    &none          &none      &none
                                    &kp LALT  &none    &none          &none      &none      &kp DEL
                        >;
                };
                
                raise_layer {
                        label = "raise";
// -----------------------------------------------------------------------------------------
// |  |  1  |  2   |  3   |  4   |  5    |   |  6    |  7  |  8     |  9     |  0     |  |
// |  |     | Prev | Play | Next | VolUp |   | PG_UP | LFT | DWN    |  UP    | RGT    |  |
// |  |     |      |      | Mute | VolDn |   | PG_DN |     | BT_PRV | BT_NXT | BT_CLR |  |
//                 |      |      |       |   |       |     |        |
                        bindings = <
   &none  &kp FR_1 &kp FR_2         &kp FR_3           &kp FR_4     &kp FR_5            &kp FR_6      &kp FR_7    &kp FR_8      &kp FR_9     &kp FR_0     &none
   &none  &none &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT &kp C_VOLUME_UP   &kp PG_UP   &kp LEFT  &kp DOWN    &kp UP     &kp RIGHT  &none
   &none  &none &none         &none           &kp C_MUTE &kp C_VOLUME_DOWN &kp PG_DN   &none    &bt BT_PRV  &bt BT_NXT &bt BT_CLR &none
                                 &none           &none     &none            &none      &none    &none
                        >;
                };

                adjust_layer {
                        label = "adjust";
// -----------------------------------------------------------------------------------------
// |  | F1      | F2      | F3      | F4      | F5      |   | F6      | F7      | F8      | F9      | F10     | F11 |
// |  | RGB_TOG | RGB_SAI | RGB_HUI | RGB_BRI | RGB_EFF |   | RGB_TOG | RGB_SAI | RGB_HUI | RGB_BRI | RGB_EFF | F12 |
// |  |         | RGB_SAD | RGB_HUD | RGB_BRD | RGB_EFR |   |         | RGB_SAD | RGB_HUD | RGB_BRD | RGB_EFR |     |
//                        |         |         |         |   |         |         |         |
                        bindings = <
   &none  &kp F1          &kp F2          &kp F3          &kp F4          &kp F5           &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
   &none  &ext_power EP_TOG &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_EFF  &rgb_ug RGB_TOG &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_EFF &kp F12
   &none  &none          &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFR  &none          &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFR &none
                                           &none          &none          &none           &none          &none          &none
                        >;
                };
        };
};
