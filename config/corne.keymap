/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keymap_french_osx.h"

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define NUM  4


&mt {
    tapping-term-ms = <400>;
};


&spi1 {
   compatible = "nordic,nrf-spim";
  /* Cannot be used together with i2c0. */
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "SK6812mini";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <27>; /* There are per-key RGB, but the first 6 are underglow */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};


/ {

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "default";

// -------------------------------------------------------------------------------------
// | RSE/ESC  |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U   |  Y  |  ;  |  \   |
// | SHFT/TAB |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E   |  I  |  O  |  '   |
// | CTRL     |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,   |  .  |  /  |  -   |
//                        | GUI | ALT | SPC |   | ENT | LWR  | BKSP |
                        bindings = <
   &lt RAISE ESC &kp FR_Q    &kp FR_W     &kp FR_F      &kp FR_P      &kp FR_G      &kp FR_J   &kp FR_L     &kp FR_U     &kp FR_Y   &kp FR_SCLN &kp FR_BSLS
   &mt LSHFT TAB &kp FR_A    &kp FR_R     &kp FR_S      &kp FR_T      &kp FR_D      &kp FR_H   &kp FR_N     &kp FR_E     &kp FR_I   &kp FR_O    &kp FR_QUOT
   &kp LCTRL     &kp FR_Z    &kp FR_X     &kp FR_C      &kp FR_V      &kp FR_B      &kp FR_K   &kp FR_M     &kp FR_COMM  &kp FR_DOT &kp FR_SLSH &kp FR_MINUS
                                          &kp LGUI      &kp LALT      &kp SPACE     &kp RET    &mo LOWER    &kp BSPC
                        >;

                };
                lower_layer {
                        label = "lower";

// ----------------------------------------------------------------------------------
// | ADJUST |  !  |  @  |  {   |  }   |  |  |   |  ¨  |  ´  |  ^  |  `  |  :  |  |  |
// | TAB    |  #  |  $  |  (   |  )   |  `  |   |  +  |  -  |  /  |  *  |  %  |  "  |
// | CTRL   |  %  |  ^  |  [   |  ]   |  ~  |   |  &  |  =  |  <  |  >  |  ?  |  _  |
//                      | SHFT | ALT  |     |   |     |     | DEL |
                        bindings = <
   &mo ADJUST &kp FR_EXLM  &kp FR_AT   &kp FR_LBRC  &kp FR_RBRC  &kp FR_PIPE   &kp FR_DIAE &kp FR_ACUT  &kp FR_CIRC &kp FR_GRV  &kp FR_COLN  &kp FR_PIPE
   &kp TAB    &kp FR_HASH  &kp FR_DLLR &kp FR_LPAR  &kp FR_RPAR  &kp FR_GRV    &kp FR_PLUS &kp FR_MINUS &kp FR_SLSH &kp FR_ASTR &kp FR_PRCNT &kp FR_DQUO
   &kp LCTRL  &kp FR_PRCNT &kp FR_CIRC &kp FR_LBKT  &kp FR_RBKT  &kp FR_TILD   &kp FR_AMPS &kp FR_EQUAL &kp FR_LABK &kp FR_RABK &kp FR_QUES  &kp FR_UNDS
                                       &kp LALT     &kp LSHFT    &none         &none       &none        &kp DEL
                        >;
                };
                
                raise_layer {
                        label = "raise";

// --------------------------------------------------------------------------------------------------
// |  |  &/1  |  é/2   |  "/3   |  '/4   |  (/5    |   |  §/6    |  è/7  |  !/8 |  ç/9 |  à/0 | )/° |
// |  |       | Prev   | Play   | Next   | VolUp   |   | PG_UP   | LFT   | DWN  |  UP  | RGT  |     |
// |  |       |        |        | Mute   | VolDn   |   | PG_DN   |       | ,    |  .   |  /   |  -  |
//                     | NUM    | ALT    |         |   |         |       |      |
                        bindings = <
   &none     &kp FR_AMPS &kp FR_LEAC    &kp FR_DQUO      &kp FR_QUOT  &kp FR_LPAR        &kp FR_SECT  &kp FR_LEGR  &kp FR_EXLM  &kp FR_LCCE &kp FR_LAGR &kp FR_RPAR
   &kp LSHFT &none       &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT   &kp C_VOLUME_UP    &kp PG_UP    &kp LEFT     &kp DOWN     &kp UP      &kp RIGHT   &none
   &kp LCTRL &none       &none          &none            &kp C_MUTE   &kp C_VOLUME_DOWN  &kp PG_DN    &none        &kp FR_COMM  &kp FR_DOT  &kp FR_SLSH &kp FR_MINUS
                                        &mo NUM          &kp LALT     &none              &none        &none        &none
                        >;
                };

                adjust_layer {
                        label = "adjust";

// -----------------------------------------------------------------------------------------------------
// |  | F1      | F2      | F3      | F4      | F5      |   | F6 | F7 | F8     | F9     | F10    | F11 |
// |  | RGB_TOG | RGB_SAI | RGB_HUI | RGB_BRI | RGB_EFF |   |    |    |        |        |        | F12 |
// |  | PWR_TOG | RGB_SAD | RGB_HUD | RGB_BRD | RGB_EFR |   |    |    | BT_PRV | BT_NXT | BT_CLR |     |
//                        |         |         |         |   |    |    |        |
                        bindings = <
   &none  &kp F1            &kp F2          &kp F3          &kp F4          &kp F5           &kp F6           &kp F7 &kp F8       &kp F9      &kp F10      &kp F11
   &none  &rgb_ug RGB_TOG   &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &none  &none        &none       &none        &kp F12
   &none  &none             &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFR  &none            &none  &bt BT_PRV   &bt BT_NXT  &bt BT_CLR   &none
                                            &none           &none           &none            &none            &none  &none
                        >;
                };

                num_layer {
                        label = "num";

// --------------------------------------------------------------------------------------------------
// |  |  |  |  |  |  |   |     | è/7 | !/8 | ç/9 | + | - |
// |  |  |  |  |  |  |   |  =  | '/4 | (/5 | §/6 | * | / |
// |  |  |  |  |  |  |   | à/0 | &/1 | é/2 | "/3 | , | . |
//             |  |  |   |     |     |     | DEL |
                        bindings = <
   &none     &none &none &none &none &none     &none        &kp FR_LEGR  &kp FR_EXLM  &kp FR_LCCE  &kp FR_PLUS  &kp FR_MINUS
   &kp LSHFT &none &none &none &none &none     &kp FR_EQUAL &kp FR_QUOT  &kp FR_LPAR  &kp FR_SECT  &kp FR_ASTR  &kp FR_SLSH
   &kp LCTRL &none &none &none &none &none     &kp FR_LAGR  &kp FR_AMPS  &kp FR_LEAC  &kp FR_DQUO  &kp FR_COMM  &kp FR_DOT
                         &none &none &none     &none        &none        &kp DEL
                        >;
                };
        };
};
